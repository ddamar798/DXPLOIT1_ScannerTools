def recommend(service_info):
    """
    Auto mapping dari hasil scan ke rekomendasi exploit tools.
    """
    service = service_info["service"].lower()
    product = service_info["product"].lower()

    recommendations = []

    if "ssh" in service:
        recommendations.append(("Hydra", "Uji brute-force kredensial SSH (pastikan diizinkan)."))
        recommendations.append(("Metasploit auxiliary/scanner/ssh", "Enumerasi & exploit modul SSH."))
    elif "ftp" in service:
        recommendations.append(("Hydra", "Uji brute-force FTP login."))
        recommendations.append(("Metasploit exploit/unix/ftp", "Eksploitasi kelemahan FTP server."))
    elif "http" in service or "https" in service:
        recommendations.append(("Nikto", "Scan kerentanan web dasar & misconfig."))
        recommendations.append(("SQLMap", "Coba SQL injection otomatis jika ada parameter input."))
        recommendations.append(("Metasploit", "Gunakan exploit modul web sesuai fingerprint."))
    elif "smb" in service or "netbios" in service:
        recommendations.append(("Metasploit exploit/windows/smb", "Eksploitasi kerentanan SMB (contoh EternalBlue)."))
        recommendations.append(("CrackMapExec", "Enumerasi & serangan SMB lanjut."))
    elif "postgres" in service or "postgresql" in service:
        recommendations.append(("Hydra", "Uji brute-force PostgreSQL login."))
        recommendations.append(("psql client", "Enumerasi skema DB jika kredensial valid."))
    elif "mysql" in service:
        recommendations.append(("Hydra", "Uji brute-force MySQL login."))
        recommendations.append(("SQLMap", "Auto exploit query SQL injection."))
    elif "rdp" in service:
        recommendations.append(("Hydra", "Uji brute-force RDP login."))
        recommendations.append(("Metasploit auxiliary/scanner/rdp", "Enumerasi RDP service & exploit modul."))

    return recommendations