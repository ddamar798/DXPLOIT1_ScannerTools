"""
modules/post_exploit/intel.py
Collects system info after exploit access is obtained.
Assumes we already have a shell (simulated for now).
"""

import subprocess, os
from core.utils import now_iso, ensure_dir

POST_DIR = os.path.join("data", "post_exploit")
ensure_dir(POST_DIR)

COMMANDS = {
    "whoami": ["whoami"],
    "id": ["id"],
    "uname": ["uname", "-a"],
    "hostname": ["hostname"],
    "users": ["cat", "/etc/passwd"],
    "network": ["netstat", "-tunlp"]
}

def run_intel_collection(session=None):
    """
    For now, runs locally. In real case, this would run on remote shell.
    """
    results = {}
    for name, cmd in COMMANDS.items():
        try:
            out = subprocess.check_output(cmd, stderr=subprocess.STDOUT, text=True)
            results[name] = out.strip()
        except Exception as e:
            results[name] = f"Error: {e}"
    # save to file
    fname = os.path.join(POST_DIR, f"intel_{now_iso().replace(':','-')}.json")
    with open(fname, "w") as f:
        import json; json.dump(results, f, indent=2)
    print(f"[+] Post-exploit intel saved: {fname}")
    return results
